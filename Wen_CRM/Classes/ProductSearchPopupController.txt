public class ProductSearchPopupController{

    public Wen_Opportunity__c opportunity;
    
    List<Wen_Opportunity_Quotes__c > quotes;
  
    List<PricebookEntryWrapper> priceBookEntryWrappers  {get;set;}
    
    public Wen_Opportunity_Quotes__c lineItem {get;set;}
    String opportunity_id;
    public ProductSearchPopupController() {
        opportunity_id = ApexPages.currentPage().getParameters().get('opportunity_id');
    	
  		this.lineItem = new Wen_Opportunity_Quotes__c();
  	}
    public List<ProductLineItem> selectedEntries 
    {
        get {
			if(selectedEntries == null) selectedEntries = new List<ProductLineItem>();
			return selectedEntries;
		}
        set;
    }
                                          
                                          
    List<PricebookEntry> priceBookEntries {get;set;}
	public List<PricebookEntryWrapper> getPriceBookEntryWrappers() {
		if(priceBookEntries == null) 
        {
            priceBookEntryWrappers = new List<PricebookEntryWrapper>();
            for(PricebookEntry entry : [Select id,Name,ProductCode ,unitprice,Product2Id,Product2.Name,Product2.Description,Product2.Family from PriceBookEntry limit 10])
            {
                priceBookEntryWrappers.add(new PricebookEntryWrapper(new ProductLineItem(entry)));
               // ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR, String.Valueof(entry)));
                	
			}
		
		}
        ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR, String.Valueof(priceBookEntryWrappers)));
		return priceBookEntryWrappers;
	}
    
    	public PageReference next() {
			selectedEntries.clear();	
			for(PricebookEntryWrapper the : priceBookEntryWrappers) {
				if(the.selected)
                {
                    the.lineItem.opportunityId = ID.valueof(opportunity_id);
					selectedEntries.add(the.lineItem); 
                }
			}
		
			Integer i = selectedEntries.size();	
			if(i > 0) {			
				return Page.OppQuote;
				//return null;
			} else {
				//ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR, 'Please select a Product/Asset.'));
				return null;
			}				
		}
    
    	public PageReference Back() {
			return Page.ProductSearchPopup;
	}
    
    	public PageReference save() {
			Integer i = selectedEntries.size();
			ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR, String.Valueof(selectedEntries)));
			ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR, String.Valueof(lineItem)));
				for(ProductLineItem the : selectedEntries) {
				
					Wen_Opportunity_Quotes__c  q=  new Wen_Opportunity_Quotes__c(
						
						List_Price__c = Decimal.valueof(the.listPrice),
						Product__c= the.ProductId,
						Product_Code__c= the.productCode,
						Quantity__c= Decimal.valueof(the.orderQuantity),
						sales_price__c= Decimal.valueof(the.salesPrice),
						Quote_status__c= 'Opened',
						Opportunity__c=the.opportunityId	
					);
					
					insert q;
				}
				
			   
			PageReference home = new PageReference('/' + opportunity_id);
			home.setRedirect(true);
			return home;
           
           
	}
}